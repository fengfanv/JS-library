var fs = require('fs');
var path = require('path');
var { zipFile, parseZipFile } = require('./zipFile.js');


var dir = path.join(__dirname, 'successFile');
let fileArr = [
    // {
    //     fileName:"xxx.mp3",
    //     filePath:"c:/xxx/xxx/xxx.mp3",
    //     fileSize:132929,//单位，字节
    // }
];//文件列表
scan(dir, function (fileDir) {

    // console.log(fileDir)
    // console.log(fs.statSync(fileDir).size) //文件大小，单位：字节

    let filePathInfo = path.parse(fileDir);
    let fileInfo = fs.statSync(fileDir);

    // console.log(filePathInfo);
    // console.log(fileInfo);

    fileArr.push({
        fileName: filePathInfo.name + filePathInfo.ext,
        filePath: fileDir,
        fileSize: fileInfo.size
    })

})

// console.log("文件个数：",fileArr.length)
// console.log(fileArr)
// console.log('----------------------------------------')

//文件按从小到大排序
fileArr.sort((a, b) => a.fileSize - b.fileSize);
// console.log(fileArr)

//文件分组，将多个小于500MB的文件，组装成一个大约500MB的文件
var maxSize = 500 * 1024 * 1024;//最大500MB，500MB转字节是524288000
// var maxSize = 500 * 1000 * 1000;
let groupArr = [
    // [
    //     {fileName:xxx,filePath:xxx,fileSize:xxx},
    //     {fileName:xxx,filePath:xxx,fileSize:xxx},
    //     ...
    // ],
    // [
    //     {fileName:xxx,filePath:xxx,fileSize:xxx},
    //     {fileName:xxx,filePath:xxx,fileSize:xxx},
    //     ...
    // ],
    // ...
];
let dontGroupFileArr = [];//不能分组的文件列表
let currentGroupSize = 0;//当前组，累计大小
let currentGroupArr = [
    // {fileName:xxx,filePath:xxx,fileSize:xxx},
    // ...
];

for (let i = 0; i < fileArr.length; i++) {
    let item = fileArr[i];
    if (item.fileSize < maxSize) {
        if (currentGroupSize + item.fileSize < maxSize) {
            //可以将当前文件，装进该组
            currentGroupSize = currentGroupSize + item.fileSize;//累加，组大小；更新组大小
            currentGroupArr.push(item);//将当前文件，装进该组
        } else {
            //不能将当前文件，装进该组
            //则将该组，封包，保存起来
            groupArr.push(currentGroupArr);
            //然后初始化，新组
            currentGroupArr = [];
            currentGroupSize = 0;
            //在然后，将当前数据装进，新组。重新
            currentGroupArr.push(item);
            currentGroupSize = currentGroupSize + item.fileSize;//累加，组大小；更新组大小
        }
    } else {
        // console.log(`i=${i} 大于500MB 无法进行分组`);
        dontGroupFileArr.push(item);
    }
    if (i + 1 == fileArr.length) {
        //当前是，文件列表最后一个文件，检查当前分组是否，需要进行封包。
        if (currentGroupArr.length > 0) {
            //需要封包
            groupArr.push(currentGroupArr);
            //初始化新组
            currentGroupArr = [];
            currentGroupSize = 0;
        }
    }
}

console.log(`共 ${fileArr.length} 个文件`);
console.log(`---------------------------------------------------------------`)
console.log(`分组列表：${groupArr.length} 个`)
for (let i = 0; i < groupArr.length; i++) {
    console.log(`第 ${i} 个分组，封装 ${groupArr[i].length} 个文件`)
}
console.log(`---------------------------------------------------------------`)
console.log(`不能分组文件列表：${dontGroupFileArr.length} 个`)
for (let i = 0; i < dontGroupFileArr.length; i++) {
    console.log(`${i} ${dontGroupFileArr[i].fileName}`)
}

console.log(`---------------------------------------------------------------`)
//开始执行压缩文件操作
let index = 0;
let binaryFilePath = path.join("d:", "project", "训练数据集");//二进制压缩文件保存地址   
let binaryFileName = `${Date.now()}_${index}.fdco`;//二进制压缩文件名(xxx.fdco)  fdco是(FormData Code Object)的缩写，仅是个名字，没有任何特殊功能。这个名字参考的 .pyc 
let zipFileCallback = function (err, res) {
    if (!err) {
        //压缩成功
        console.log(`第${index}分组，${groupArr[index].length}个文件，压缩成功，压缩文件名是${binaryFileName}`);
    } else {
        //压缩失败
        console.log(`第${index}分组，压缩失败！`)
        for (let i = 0; i < groupArr[index].length; i++) {
            console.log(`${index}分组，第${i}个文件，`, groupArr[index][i].fileName)
        }
    }
    if (index + 1 != groupArr.length) {
        index = index + 1;
        binaryFileName = `${Date.now()}_${index}.fdco`;
        zipFile(null, groupArr[index], path.join(binaryFilePath, binaryFileName), zipFileCallback);
    }
}
// 压缩二进制FormData文件
// zipFile(null, groupArr[index], path.join(binaryFilePath, binaryFileName), zipFileCallback);





// 解析二进制FormData文件
// parseZipFile(path.join('e:','训练数据集','1709714910909_0.fdco'),binaryFilePath,function(res){
//     console.log(res);
// })






//扫描文件夹内所有文件
function scan(dir, callback) {
    fs.readdirSync(dir).forEach(function (file) {
        var pathname = path.join(dir, file);
        if (fs.statSync(pathname).isDirectory()) {
            //fs.statSync(pathname).isDirectory()检查是否是目录
            scan(pathname, callback);
        } else {
            callback(pathname);
        }
    });
}


// 第0分组，62个文件，压缩成功，压缩文件名是1709714910909_0.fdco
// 第1分组，28个文件，压缩成功，压缩文件名是1709714916199_1.fdco
// 第2分组，20个文件，压缩成功，压缩文件名是1709714921301_2.fdco
// 第3分组，17个文件，压缩成功，压缩文件名是1709714926158_3.fdco
// 第4分组，14个文件，压缩成功，压缩文件名是1709714930856_4.fdco
// 第5分组，13个文件，压缩成功，压缩文件名是1709714935531_5.fdco
// 第6分组，12个文件，压缩成功，压缩文件名是1709714940492_6.fdco
// 第7分组，11个文件，压缩成功，压缩文件名是1709714945724_7.fdco
// 第8分组，11个文件，压缩成功，压缩文件名是1709714950488_8.fdco
// 第9分组，10个文件，压缩成功，压缩文件名是1709714955426_9.fdco
// 第10分组，10个文件，压缩成功，压缩文件名是1709714959854_10.fdco
// 第11分组，9个文件，压缩成功，压缩文件名是1709714964586_11.fdco
// 第12分组，9个文件，压缩成功，压缩文件名是1709714968955_12.fdco
// 第13分组，8个文件，压缩成功，压缩文件名是1709714973693_13.fdco
// 第14分组，8个文件，压缩成功，压缩文件名是1709714977883_14.fdco
// 第15分组，7个文件，压缩成功，压缩文件名是1709714982577_15.fdco
// 第16分组，7个文件，压缩成功，压缩文件名是1709714986753_16.fdco
// 第17分组，7个文件，压缩成功，压缩文件名是1709714991056_17.fdco
// 第18分组，6个文件，压缩成功，压缩文件名是1709714995716_18.fdco
// 第19分组，6个文件，压缩成功，压缩文件名是1709714999887_19.fdco
// 第20分组，6个文件，压缩成功，压缩文件名是1709715004127_20.fdco
// 第21分组，6个文件，压缩成功，压缩文件名是1709715008567_21.fdco
// 第22分组，6个文件，压缩成功，压缩文件名是1709715013076_22.fdco
// 第23分组，5个文件，压缩成功，压缩文件名是1709715017743_23.fdco
// 第24分组，5个文件，压缩成功，压缩文件名是1709715021680_24.fdco
// 第25分组，5个文件，压缩成功，压缩文件名是1709715025743_25.fdco
// 第26分组，5个文件，压缩成功，压缩文件名是1709715030038_26.fdco
// 第27分组，5个文件，压缩成功，压缩文件名是1709715034300_27.fdco
// 第28分组，5个文件，压缩成功，压缩文件名是1709715038488_28.fdco
// 第29分组，5个文件，压缩成功，压缩文件名是1709715042826_29.fdco
// 第30分组，5个文件，压缩成功，压缩文件名是1709715047270_30.fdco
// 第31分组，4个文件，压缩成功，压缩文件名是1709715051798_31.fdco
// 第32分组，4个文件，压缩成功，压缩文件名是1709715055612_32.fdco
// 第33分组，4个文件，压缩成功，压缩文件名是1709715059393_33.fdco
// 第34分组，4个文件，压缩成功，压缩文件名是1709715063598_34.fdco
// 第35分组，4个文件，压缩成功，压缩文件名是1709715067906_35.fdco
// 第36分组，4个文件，压缩成功，压缩文件名是1709715072159_36.fdco
// 第37分组，4个文件，压缩成功，压缩文件名是1709715076411_37.fdco
// 第38分组，4个文件，压缩成功，压缩文件名是1709715080724_38.fdco
// 第39分组，4个文件，压缩成功，压缩文件名是1709715085358_39.fdco
// 第40分组，4个文件，压缩成功，压缩文件名是1709715089946_40.fdco
// 第41分组，4个文件，压缩成功，压缩文件名是1709715094573_41.fdco
// 第42分组，3个文件，压缩成功，压缩文件名是1709715099341_42.fdco
// 第43分组，3个文件，压缩成功，压缩文件名是1709715102982_43.fdco
// 第44分组，3个文件，压缩成功，压缩文件名是1709715106562_44.fdco
// 第45分组，3个文件，压缩成功，压缩文件名是1709715110170_45.fdco
// 第46分组，3个文件，压缩成功，压缩文件名是1709715113900_46.fdco
// 第47分组，3个文件，压缩成功，压缩文件名是1709715117698_47.fdco
// 第48分组，3个文件，压缩成功，压缩文件名是1709715121721_48.fdco
// 第49分组，3个文件，压缩成功，压缩文件名是1709715125723_49.fdco
// 第50分组，3个文件，压缩成功，压缩文件名是1709715130049_50.fdco
// 第51分组，3个文件，压缩成功，压缩文件名是1709715134276_51.fdco
// 第52分组，3个文件，压缩成功，压缩文件名是1709715138579_52.fdco
// 第53分组，3个文件，压缩成功，压缩文件名是1709715142899_53.fdco
// 第54分组，3个文件，压缩成功，压缩文件名是1709715147350_54.fdco
// 第55分组，3个文件，压缩成功，压缩文件名是1709715151811_55.fdco
// 第56分组，3个文件，压缩成功，压缩文件名是1709715156578_56.fdco
// 第57分组，2个文件，压缩成功，压缩文件名是1709715161329_57.fdco
// 第58分组，2个文件，压缩成功，压缩文件名是1709715164513_58.fdco
// 第59分组，2个文件，压缩成功，压缩文件名是1709715167868_59.fdco
// 第60分组，2个文件，压缩成功，压缩文件名是1709715171079_60.fdco
// 第61分组，2个文件，压缩成功，压缩文件名是1709715174517_61.fdco
// 第62分组，2个文件，压缩成功，压缩文件名是1709715177962_62.fdco
// 第63分组，2个文件，压缩成功，压缩文件名是1709715181583_63.fdco
// 第64分组，2个文件，压缩成功，压缩文件名是1709715185288_64.fdco
// 第65分组，2个文件，压缩成功，压缩文件名是1709715188928_65.fdco
// 第66分组，2个文件，压缩成功，压缩文件名是1709715192614_66.fdco
// 第67分组，2个文件，压缩成功，压缩文件名是1709715196310_67.fdco
// 第68分组，2个文件，压缩成功，压缩文件名是1709715200056_68.fdco
// 第69分组，2个文件，压缩成功，压缩文件名是1709715203900_69.fdco
// 第70分组，2个文件，压缩成功，压缩文件名是1709715207849_70.fdco
// 第71分组，2个文件，压缩成功，压缩文件名是1709715211779_71.fdco
// 第72分组，2个文件，压缩成功，压缩文件名是1709715215867_72.fdco
// 第73分组，2个文件，压缩成功，压缩文件名是1709715219970_73.fdco
// 第74分组，2个文件，压缩成功，压缩文件名是1709715224456_74.fdco
// 第75分组，2个文件，压缩成功，压缩文件名是1709715228701_75.fdco
// 第76分组，2个文件，压缩成功，压缩文件名是1709715233174_76.fdco
// 第77分组，2个文件，压缩成功，压缩文件名是1709715237628_77.fdco
// 第78分组，2个文件，压缩成功，压缩文件名是1709715242297_78.fdco
// 第79分组，2个文件，压缩成功，压缩文件名是1709715247000_79.fdco
// 第80分组，1个文件，压缩成功，压缩文件名是1709715251907_80.fdco
// 第81分组，1个文件，压缩成功，压缩文件名是1709715254440_81.fdco
// 第82分组，1个文件，压缩成功，压缩文件名是1709715256858_82.fdco
// 第83分组，1个文件，压缩成功，压缩文件名是1709715259142_83.fdco
// 第84分组，1个文件，压缩成功，压缩文件名是1709715261499_84.fdco
// 第85分组，1个文件，压缩成功，压缩文件名是1709715263881_85.fdco
// 第86分组，1个文件，压缩成功，压缩文件名是1709715266425_86.fdco
// 第87分组，1个文件，压缩成功，压缩文件名是1709715269089_87.fdco
// 第88分组，1个文件，压缩成功，压缩文件名是1709715271693_88.fdco
// 第89分组，1个文件，压缩成功，压缩文件名是1709715274300_89.fdco
// 第90分组，1个文件，压缩成功，压缩文件名是1709715277032_90.fdco
// 第91分组，1个文件，压缩成功，压缩文件名是1709715279731_91.fdco
// 第92分组，1个文件，压缩成功，压缩文件名是1709715282472_92.fdco
// 第93分组，1个文件，压缩成功，压缩文件名是1709715285242_93.fdco
// 第94分组，1个文件，压缩成功，压缩文件名是1709715288002_94.fdco
// 第95分组，1个文件，压缩成功，压缩文件名是1709715290657_95.fdco
// 第96分组，1个文件，压缩成功，压缩文件名是1709715293353_96.fdco
// 第97分组，1个文件，压缩成功，压缩文件名是1709715296038_97.fdco
// 第98分组，1个文件，压缩成功，压缩文件名是1709715298931_98.fdco
// 第99分组，1个文件，压缩成功，压缩文件名是1709715301708_99.fdco
// 第100分组，1个文件，压缩成功，压缩文件名是1709715304700_100.fdco
// 第101分组，1个文件，压缩成功，压缩文件名是1709715307633_101.fdco
// 第102分组，1个文件，压缩成功，压缩文件名是1709715310573_102.fdco
// 第103分组，1个文件，压缩成功，压缩文件名是1709715313715_103.fdco
// 第104分组，1个文件，压缩成功，压缩文件名是1709715316770_104.fdco
// 第105分组，1个文件，压缩成功，压缩文件名是1709715319879_105.fdco
// 第106分组，1个文件，压缩成功，压缩文件名是1709715323051_106.fdco
// 第107分组，1个文件，压缩成功，压缩文件名是1709715326175_107.fdco
// 第108分组，1个文件，压缩成功，压缩文件名是1709715329370_108.fdco
// 第109分组，1个文件，压缩成功，压缩文件名是1709715332591_109.fdco
// 第110分组，1个文件，压缩成功，压缩文件名是1709715335752_110.fdco
// 第111分组，1个文件，压缩成功，压缩文件名是1709715339087_111.fdco
// 第112分组，1个文件，压缩成功，压缩文件名是1709715342432_112.fdco
// 第113分组，1个文件，压缩成功，压缩文件名是1709715345755_113.fdco
// 第114分组，1个文件，压缩成功，压缩文件名是1709715349313_114.fdco
// 第115分组，1个文件，压缩成功，压缩文件名是1709715352887_115.fdco
// 第116分组，1个文件，压缩成功，压缩文件名是1709715356475_116.fdco
// 第117分组，1个文件，压缩成功，压缩文件名是1709715360079_117.fdco
// 第118分组，1个文件，压缩成功，压缩文件名是1709715363705_118.fdco
// 第119分组，1个文件，压缩成功，压缩文件名是1709715367245_119.fdco
// 第120分组，1个文件，压缩成功，压缩文件名是1709715370901_120.fdco
// 第121分组，1个文件，压缩成功，压缩文件名是1709715374620_121.fdco
// 第122分组，1个文件，压缩成功，压缩文件名是1709715378569_122.fdco
// 第123分组，1个文件，压缩成功，压缩文件名是1709715382670_123.fdco
// 第124分组，1个文件，压缩成功，压缩文件名是1709715386626_124.fdco
// 第125分组，1个文件，压缩成功，压缩文件名是1709715390764_125.fdco
// 第126分组，1个文件，压缩成功，压缩文件名是1709715395017_126.fdco
// 第127分组，1个文件，压缩成功，压缩文件名是1709715399269_127.fdco
// 第128分组，1个文件，压缩成功，压缩文件名是1709715403654_128.fdco
// 第129分组，1个文件，压缩成功，压缩文件名是1709715408013_129.fdco
// 第130分组，1个文件，压缩成功，压缩文件名是1709715412570_130.fdco
// 第131分组，1个文件，压缩成功，压缩文件名是1709715417165_131.fdco
// 第132分组，1个文件，压缩成功，压缩文件名是1709715421595_132.fdco
// 第133分组，1个文件，压缩成功，压缩文件名是1709715421595_133.fdco

